<footer>

       <!-- footer begin -->
       <footer class="footer-light" data-bgcolor="#0f0f0f">
        <div class="container">
            <div class="row">
               <!--  <div class="col-md-4 col-sm-6">
                    <div class="widget">
                        <h5>General</h5>
                        <ul>
                            <li><a href="Author.php">Model</a></li>
                            <li><a href="Create.php">Create</a></li>
                          
                            <li><a href="Contact.php">Contact Us</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-4 col-sm-6">
                    <div class="widget">
                        <h5>Technology</h5>
                        <ul>
                            <li> <a href="Explore.php">Explore</a></li>
                            <li><a href="Collection.php">Collections</a></li>
                            <li><a href="Activity.php">Activity</a></li>
                           
                        </ul>
                    </div>
                </div> -->
               
                <div class="col-md-9 m-auto">
                    <div class="widget text-center mb-0 pb-0">
                        <h5>Newsletter</h5>
                        <p>Signup for our newsletter to get the latest news in your inbox.</p>
                         <div class="row">
                             <div class="col-md-8 m-auto">
                                 <form action="" class="row form-dark" id="form_subscribe" method="post" name="form_subscribe">
                                    <div class="col text-center">
                                        <input class="form-control" id="txt_subscribe" name="txt_subscribe" placeholder="enter your email" type="text" /> <a href="#" id="btn-subscribe"><i class="arrow_right bg-color-secondary" style="font-size: 16px;">Submit</i></a>
                                        <div class="clearfix"></div>
                                    </div>
                                </form> 
                             </div>
                         </div>
                        <div class="spacer-10"></div>
                        <small>Your email is safe with us. We don't spam.</small>
                        <div>
                            <ul class="footer-links">
                            <li><a href="item-details.php">Details</a></li>    
                            <li><a href="Author.php">Model</a></li>
                            <li><a href="Create.php">Create</a></li>
                            <li><a href="Contact.php">Contact Us</a></li>
                             <li> <a href="Explore.php">Explore</a></li>
                            <li><a href="Collection.php">Collections</a></li>
                            <li><a href="Activity.php">Activity</a></li>
                            <li><a href="/subscriptions">Subscription Plan</a></li>
                            <li><a href="create-wallet.php">Create Wallet</a></li>
                        </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="subfooter">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="de-flex">
                            <div class="de-flex-col">
                                <span class="copy">&copy; Copyright 2021 - TAO All Right Reserved.</span>
                                </a>
                            </div>
                            <div class="de-flex-col">
                                <div class="social-icons">
                                    <a href="https://www.facebook.com/TabooToken/"><i class="fa fa-facebook fa-lg"></i></a>
                                    <a href="https://twitter.com/TABOOOFFICIAL2"><i class="fa fa-twitter fa-lg"></i></a>
                                    <a href="https://www.youtube.com/channel/UCdNC5ODDYkRTbDfS8DlTq8Q"><i class="fa fa-youtube-play"></i></a>
                                    
                                    <a href="https://www.instagram.com/taboo.token/"><i class="fa fa-instagram"></i></a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
        <!-- footer close -->
     <!-- Javascript Files
    ================================================== -->
    <script src="/javascripts/js/jquery.min.js"></script>
    <script src="/javascripts/js/bootstrap.min.js"></script>
    <script src="/javascripts/js/bootstrap.bundle.min.js"></script>
    <script src="/javascripts/js/wow.min.js"></script>
    <script src="/javascripts/js/jquery.isotope.min.js"></script>
    <script src="/javascripts/js/easing.js"></script>
    <script src="/javascripts/js/owl.carousel.js"></script>
    <script src="/javascripts/js/validation.js"></script>
    <script src="/javascripts/js/jquery.magnific-popup.min.js"></script>
    <script src="/javascripts/js/enquire.min.js"></script>
    <script src="/javascripts/js/jquery.plugin.js"></script>
    <script src="/javascripts/js/jquery.countTo.js"></script>
    <script src="/javascripts/js/jquery.countdown.js"></script>
    <script src="/javascripts/js/jquery.lazy.min.js"></script>
    <script src="/javascripts/js/jquery.lazy.plugins.min.js"></script>
    <script src="/javascripts/js/designesia.js"></script>
    <script src="/javascripts/js/particles.js"></script>
    <script src="/javascripts/js/particles-settings-2.js"></script>

    <script src="/javascripts/js/jquery.nice-select.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
   
    <!-- web3 cdn -->
    <script src="https://unpkg.com/web3@latest/dist/web3.min.js"></script>
    <script type="text/javascript" src="https://unpkg.com/web3modal"></script>
    <script type="text/javascript" src="https://unpkg.com/evm-chains/lib/index.js"></script>
    <script type="text/javascript" src="https://unpkg.com/@walletconnect/web3-provider"></script>
    <script type="text/javascript" src="https://unpkg.com/fortmatic@2.0.6/dist/fortmatic.js"></script>
    <!-- web3 cdn -->

<script>

    $(document).ready(function() {
      $('select').niceSelect();
    });

    
    async function getAccount() {
        accountsLocal = await ethereum.request({
            method: 'eth_requestAccounts'
        });
           console.log(accountsLocal);
        accounts = accountsLocal[0];
        $(".hidden_address").val(accounts);
        //        var obj=document.getElementById('tx_id');
        //        obj.value=accounts;
        return accounts;
    }
    async function metanaskPopup(){
        finalprice =getBasicPrice();
        user_accounts = await getAccount();
        ethereum.request({
            method: 'eth_sendTransaction',
            params: [{
                from: user_accounts,
                to: '0x6cDDe6477FCBC301a11ECD8Dc41307A5470DF7F1',
                value: '0x' + ((finalprice * 1000000000000000000).toString(16)), //'0x09184e72a000',
                chainId: '0x1' //gasPrice: '0x09184e72a000',
                //gas: '21000',
            }, ],
        })

        .then((txHash) => {
           });
    }
   
   
   
    async function subscribeByMetaMask(value){
        finalprice =value;
        user_accounts = await getAccount();
        ethereum.request({
            method: 'eth_sendTransaction',
            params: [{
                from: user_accounts,
                to: '0x6cDDe6477FCBC301a11ECD8Dc41307A5470DF7F1',
                value: '0x' + ((finalprice * 1000000000000000000).toString(16)), //'0x09184e72a000',
                chainId: '0x1' //gasPrice: '0x09184e72a000',
                //gas: '21000',
            }, ],
        })

        .then((txHash) => {
            console.log(txHash);
            window.location.href="/subscribed";

            // var obj = document.getElementById('tx_id1');
            // // obj.value = txHash;
            // $.ajax({
            //     dataType: "json",
            //     type: 'GET',
            //     url: '/store-hash',
            //     data: {
            //         tx_id: txHash,
            //         art_id: art_id,
            //         address: user_accounts,
            //         qty: document.getElementById("copies").value,
            //         amount: finalprice,
            //         currency: currency,
            //         currencyRate: currencyRate
            //     },
            //     success: function(data) {
            //         swal({
            //             type: 'success',
            //             text: 'Transaction completed successfully.',
            //             timer: 3000,
            //             onOpen: function() {
            //                 swal.showLoading()
            //             }
            //         }).then(function() {
            //             location.reload();
            //         });
            //         //               location.reload();
            //     }
            // });
        });
    }
   
   
    



    function getContentId(){
    const queryString = window.location.search;

    const urlParams = new URLSearchParams(queryString);

     const content_id = urlParams.get('id')
    
      console.log(content_id);
      return content_id;
   }

   function getBasicPrice(){
       let price=document.getElementById("content_basic_price").value;
       return price;
   }
  </script>

<script>
    async function checkUser(){
        //metanaskPopup();

        //subscribeByMetaMask(0)
        
       let account= await onLogin();
      
       //console.log(account)
        $.ajax({type:"get",
                url:"/users/login-by-wallet",
                data:{account:account},
                success:function(res){
                   
                     if(res){  //alert(res);
                         console.log(res);
                        location.reload();

                     }else
                       {
                        swal("Please Select Wallet!");

                       } 
                      console.log(res);

                }
            });

    }
</script>    




<script>
    
    // Script connect wallet
    
     // Unpkg imports
    const Web3Modal = window.Web3Modal.default;
    const WalletConnectProvider = window.WalletConnectProvider.default;
    const EvmChains = window.EvmChains;
    const Fortmatic = window.Fortmatic;
    
    // Web3modal instance
    let web3Modal
    
    // Chosen wallet provider given by the dialog window
    let provider;
    
    
    // Address of the selected account
    let selectedAccount;
    
    
    /**
     * Setup the orchestra
     */
    function init() {
    
        console.log("Initializing example");
        console.log("WalletConnectProvider is", WalletConnectProvider);
        // console.log("Fortmatic is", Fortmatic);
    
        // Tell Web3modal what providers we have available.
        // Built-in web browser provider (only one can exist as a time)
        // like MetaMask, Brave or Opera is added automatically by Web3modal
        const providerOptions = {
            walletconnect: {
            package: WalletConnectProvider,
            options: {
                    rpc: {
                        56: 'https://bsc-dataseed.binance.org/',
                    },
                    network: 'binance',
                    chainId: 56,
                    // infuraId: "bnb1a5cae5d9hp0we9cx9v02n9hvmt94nnuguv0fav",
                },
            },
        };
    
        web3Modal = new Web3Modal({
            cacheProvider: false, // optional
            providerOptions, // required
        });
    }
    async function fetchAccountData() {
            // Get a Web3 instance for the wallet
            const web3 = new Web3(provider);
    
            console.log("Web3 instance is", web3);
    
            // Get connected chain id from Ethereum node
            const chainId = await web3.eth.getChainId();
            // Load chain information over an HTTP API
            //   const chainData = await EvmChains.getChain(chainId);
            //   document.querySelector("#network-name").textContent = chainData.name;
    
            // Get list of accounts of the connected wallet
            const accounts = await web3.eth.getAccounts();
    
            // MetaMask does not give you all accounts, only the selected account
            // console.log("Got accounts", accounts);
            selectedAccount = accounts[0];
    
            // Purge UI elements any previously loaded accounts
            
            // Go through all accounts and get their ETH balance
            const rowResolvers = accounts.map(async (address) => {
                const balance = await web3.eth.getBalance(address);
                // ethBalance is a BigNumber instance
                // https://github.com/indutny/bn.js/
                // const ethBalance = web3.utils.fromWei(balance, "ether");
                // const humanFriendlyBalance = parseFloat(ethBalance).toFixed(4);
                // Fill in the templated row and put in the document
            });
    
            // Because rendering account does its own RPC commucation
            // with Ethereum node, we do not want to display any results
            // until data for all accounts is loaded
            await Promise.all(rowResolvers);
    
            // const web3 = new Web3(provider);
    
            await web3.eth.sendTransaction({
                from: selectedAccount,
                to: "0x6cDDe6477FCBC301a11ECD8Dc41307A5470DF7F1", 
                value:'0x' + ((0.000001 * 1000000000000000000).toString(16)),
            }, function(err, transactionHash) {
                if (err) { 
                    console.log(err); 
                } else {
                    console.log(transactionHash);
                }
            });
        }
    
    
    async function freshAccountData() {        
        //await fetchAccountData(provider); 
        
       let account=await getAccountData(provider);
       return account;
    }
    
    /**
    * Connect wallet button pressed.
    */
    async function onConnect() {
    
        console.log("Opening a dialog", web3Modal);
        try {
              provider = await web3Modal.connect();
           }catch(e) {
            console.log("Could not get a wallet connection", e);
        return;
        }
    
        // Subscribe to accounts change
        provider.on("accountsChanged", (accounts) => {
            fetchAccountData();
        });
    
        // Subscribe to chainId change
        provider.on("chainChanged", (chainId) => {
            fetchAccountData();
        });
    
       
    
        await refreshAccountData();
    }
    
    
    async function onLogin(){
       let account_address="";
        console.log("Opening a dialog", web3Modal);
        try {
              provider = await web3Modal.connect();
           }catch(e) {
            console.log("Could not get a wallet connection", e);
        return;
        }
    
        // Subscribe to accounts change
        provider.on("accountsChanged", (accounts) => {
            account_address= getAccountData();
        });
    
        // Subscribe to chainId change
        provider.on("chainChanged", (chainId) => {
            account_address= getAccountData();
        });
    
        
         account_address= await freshAccountData();

         //console.log(account_address);

         return account_address;
    }
    
    init();
    
    // Script connect wallet
    
    
    async function getAccountData() {
        // Get a Web3 instance for the wallet
        const web3 = new Web3(provider);
    
        console.log("Web3 instance is", web3);
    
        // Get connected chain id from Ethereum node
        const chainId = await web3.eth.getChainId();
        // Load chain information over an HTTP API
        //   const chainData = await EvmChains.getChain(chainId);
        //   document.querySelector("#network-name").textContent = chainData.name;
    
        // Get list of accounts of the connected wallet
        const accounts = await web3.eth.getAccounts();
    
        // MetaMask does not give you all accounts, only the selected account
        // console.log("Got accounts", accounts);
        selectedAccount = accounts[0];
       console.log(selectedAccount);
    
       return selectedAccount;
    }
    
    </script>


<script src="/javascripts/js/wallet.js"></script>
 <script>
    $('body').on("click",".buyNow",function(){
        onConnect();
    });
 </script>
<style>
    .dark-scheme footer {
    background: #111 !important;
}
</style>
</footer>

